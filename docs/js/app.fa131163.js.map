{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/code-snippets/07-s3-five-mb-chunks.html","webpack:///./src/code-snippets/09-s3-idealized-inner.html","webpack:///./src/code-snippets/06-s3-end-stream-not-end-upload.html","webpack:///./src/code-snippets/05-s3-ordered-parts.html","webpack:///./src/App.vue?317c","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/App.vue?f81e","webpack:///./src/code-snippets/10_urllib2.html","webpack:///./src/code-snippets/04-s3-save-part-number.html","webpack:///./src/code-snippets/11_requests.html","webpack:///./src/code-snippets/03-s3-multipart.html","webpack:///./src/code-snippets/01-s3-idealized.html","webpack:///./src/code-snippets/02-s3-callback.html","webpack:///./src/code-snippets/08-s3-abort-on-error.html"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Appvue_type_template_id_092d0ebb_render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticClass","_v","_e","domProps","innerHTML","_s","s3Idealized","s3Callback","s3Multipart","s3SavePartNum","s3OrderedParts","s3EndStream","s3FiveMb","s3AbortOnError","pyUrllib2","pyRequests","href","steps","s3IdealizedInner","directives","rawName","step","expression","staticStyle","background-image","class","stricken","staticRenderFns","Appvue_type_script_lang_js_","mixins","eagle_es","slideshow","_01_s3_idealized_default","a","_02_s3_callback_default","_03_s3_multipart_default","_04_s3_save_part_number_default","_05_s3_ordered_parts_default","_06_s3_end_stream_not_end_upload_default","_07_s3_five_mb_chunks_default","_08_s3_abort_on_error_default","_09_s3_idealized_inner_default","_11_requests_default","_10_urllib2_default","src_Appvue_type_script_lang_js_","component","componentNormalizer","options","__file","App","hljs","registerLanguage","javascript","Options","Vue","config","productionTip","Eagle","computed","isChild","parentWindow","isParent","childWindow","use","VueVisible","render","h","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.fa131163.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/joyful-apis/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = \"<div class=\\\"highlight\\\"><pre><span></span><span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">createMultipartUpload</span><span class=\\\"p\\\">({</span>\\n  <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n  <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n<span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n  <span class=\\\"kr\\\">const</span> <span class=\\\"nx\\\">uploadId</span> <span class=\\\"o\\\">=</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">UploadId</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"kd\\\">let</span> <span class=\\\"nx\\\">partNumber</span> <span class=\\\"o\\\">=</span> <span class=\\\"mi\\\">0</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"kd\\\">let</span> <span class=\\\"nx\\\">ended</span> <span class=\\\"o\\\">=</span> <span class=\\\"kc\\\">false</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"kr\\\">const</span> <span class=\\\"nx\\\">parts</span> <span class=\\\"o\\\">=</span> <span class=\\\"p\\\">[];</span>\\n  <span class=\\\"kd\\\">let</span> <span class=\\\"nx\\\">chunkSoFar</span> <span class=\\\"o\\\">=</span> <span class=\\\"s1\\\">&#39;&#39;</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"kd\\\">function</span> <span class=\\\"nx\\\">maybeCompleteUpload</span><span class=\\\"p\\\">()</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"k\\\">if</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">ended</span> <span class=\\\"o\\\">&amp;&amp;</span> <span class=\\\"nx\\\">parts</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">all</span><span class=\\\"p\\\">(</span><span class=\\\"nx\\\">p</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"nx\\\">p</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">ETag</span><span class=\\\"p\\\">))</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">completeMultipartUpload</span><span class=\\\"p\\\">({</span>\\n          <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n          <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n          <span class=\\\"nx\\\">MultipartUpload</span><span class=\\\"o\\\">:</span> <span class=\\\"p\\\">{</span>\\n            <span class=\\\"nx\\\">Parts</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">parts</span><span class=\\\"p\\\">,</span>\\n          <span class=\\\"p\\\">},</span>\\n          <span class=\\\"nx\\\">UploadId</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">uploadId</span><span class=\\\"p\\\">,</span>\\n        <span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n        <span class=\\\"c1\\\">// finally it&#39;s ended...</span>\\n      <span class=\\\"p\\\">});</span>\\n    <span class=\\\"p\\\">}</span>\\n  <span class=\\\"p\\\">}</span>\\n\\n  <span class=\\\"kd\\\">function</span> <span class=\\\"nx\\\">appendPart</span><span class=\\\"p\\\">(</span><span class=\\\"nx\\\">payload</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">partNumber</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"c1\\\">// save this off, as it might have changed before</span>\\n    <span class=\\\"c1\\\">// the response from the upload</span>\\n    <span class=\\\"kr\\\">const</span> <span class=\\\"nx\\\">part</span> <span class=\\\"o\\\">=</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"nx\\\">PartNumber</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">partNumber</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">ETag</span><span class=\\\"o\\\">:</span> <span class=\\\"kc\\\">null</span><span class=\\\"p\\\">,</span> <span class=\\\"c1\\\">// not yet known</span>\\n    <span class=\\\"p\\\">};</span>\\n    <span class=\\\"c1\\\">// we must append now, as there&#39;s no guarantee</span>\\n    <span class=\\\"c1\\\">// the uploadPart responses will arrive in order.</span>\\n    <span class=\\\"c1\\\">// we&#39;ll keep a reference to &#39;part&#39; to fill in the</span>\\n    <span class=\\\"c1\\\">// ETag later.</span>\\n    <span class=\\\"nx\\\">parts</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">append</span><span class=\\\"p\\\">(</span><span class=\\\"nx\\\">part</span><span class=\\\"p\\\">);</span>\\n    <span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">uploadPart</span><span class=\\\"p\\\">({</span>\\n      <span class=\\\"nx\\\">Body</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">payload</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">PartNumber</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">part</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">partNumber</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">UploadId</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">uploadId</span><span class=\\\"p\\\">,</span>\\n    <span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"k\\\">if</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">{</span>\\n        <span class=\\\"c1\\\">// todo, handle errors by</span>\\n        <span class=\\\"c1\\\">// calling abortMultipartUpload</span>\\n      <span class=\\\"p\\\">}</span>\\n      <span class=\\\"c1\\\">// &#39;part&#39; is already in the array</span>\\n      <span class=\\\"c1\\\">// but we have a reference to it, so we can</span>\\n      <span class=\\\"c1\\\">// update with the ETag now that we know it.</span>\\n      <span class=\\\"nx\\\">part</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">ETag</span> <span class=\\\"o\\\">=</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">ETag</span><span class=\\\"p\\\">;</span>\\n      <span class=\\\"nx\\\">maybeCompleteUpload</span><span class=\\\"p\\\">();</span>\\n    <span class=\\\"p\\\">});</span>\\n  <span class=\\\"p\\\">}</span>\\n\\n  <span class=\\\"nx\\\">req</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">on</span><span class=\\\"p\\\">(</span><span class=\\\"s1\\\">&#39;data&#39;</span><span class=\\\"p\\\">,</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">chunk</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"nx\\\">chunkSoFar</span> <span class=\\\"o\\\">+=</span> <span class=\\\"nx\\\">chunk</span><span class=\\\"p\\\">;</span>\\n    <span class=\\\"k\\\">if</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">chunkSoFar</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">length</span> <span class=\\\"o\\\">&gt;</span> <span class=\\\"nx\\\">FIVE_MB_IN_BYTES</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"nx\\\">appendPart</span><span class=\\\"p\\\">(</span><span class=\\\"nx\\\">chunkSoFar</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">partNumber</span><span class=\\\"p\\\">);</span>\\n      <span class=\\\"nx\\\">chunkSoFar</span> <span class=\\\"o\\\">=</span> <span class=\\\"s1\\\">&#39;&#39;</span><span class=\\\"p\\\">;</span>\\n      <span class=\\\"nx\\\">partNumber</span><span class=\\\"o\\\">++</span><span class=\\\"p\\\">;</span>\\n    <span class=\\\"p\\\">}</span>\\n  <span class=\\\"p\\\">});</span>\\n  <span class=\\\"nx\\\">req</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">on</span><span class=\\\"p\\\">(</span><span class=\\\"s1\\\">&#39;end&#39;</span><span class=\\\"p\\\">,</span> <span class=\\\"p\\\">()</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"nx\\\">ended</span> <span class=\\\"o\\\">=</span> <span class=\\\"kc\\\">true</span><span class=\\\"p\\\">;</span>\\n    <span class=\\\"k\\\">if</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">chunkSoFar</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">length</span> <span class=\\\"o\\\">&gt;</span> <span class=\\\"mi\\\">0</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"nx\\\">appendPart</span><span class=\\\"p\\\">(</span><span class=\\\"nx\\\">chunkSoFar</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">partNumber</span><span class=\\\"p\\\">);</span>\\n    <span class=\\\"p\\\">}</span>\\n    <span class=\\\"nx\\\">maybeCompleteUpload</span><span class=\\\"p\\\">();</span>\\n  <span class=\\\"p\\\">});</span>\\n<span class=\\\"p\\\">});</span>\\n</pre></div>\\n\";","module.exports = \"<div class=\\\"highlight\\\"><pre><span></span><span class=\\\"nx\\\">await</span> <span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">putObject</span><span class=\\\"p\\\">({</span>\\n  <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n  <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n  <span class=\\\"c1\\\">// forward the body of the request</span>\\n  <span class=\\\"c1\\\">// straight to s3</span>\\n  <span class=\\\"nx\\\">Body</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">req</span><span class=\\\"p\\\">,</span>\\n<span class=\\\"p\\\">});</span>\\n</pre></div>\\n\";","module.exports = \"<div class=\\\"highlight\\\"><pre><span></span><span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">createMultipartUpload</span><span class=\\\"p\\\">({</span>\\n  <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n  <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n<span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n  <span class=\\\"kr\\\">const</span> <span class=\\\"nx\\\">uploadId</span> <span class=\\\"o\\\">=</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">UploadId</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"kd\\\">let</span> <span class=\\\"nx\\\">partNumber</span> <span class=\\\"o\\\">=</span> <span class=\\\"mi\\\">0</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"kd\\\">let</span> <span class=\\\"nx\\\">ended</span> <span class=\\\"o\\\">=</span> <span class=\\\"kc\\\">false</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"kr\\\">const</span> <span class=\\\"nx\\\">parts</span> <span class=\\\"o\\\">=</span> <span class=\\\"p\\\">[];</span>\\n  <span class=\\\"kd\\\">function</span> <span class=\\\"nx\\\">maybeEndUpload</span><span class=\\\"p\\\">()</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"k\\\">if</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">ended</span> <span class=\\\"o\\\">&amp;&amp;</span> <span class=\\\"nx\\\">parts</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">all</span><span class=\\\"p\\\">(</span><span class=\\\"nx\\\">p</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"nx\\\">p</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">ETag</span><span class=\\\"p\\\">))</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">completeMultipartUpload</span><span class=\\\"p\\\">({</span>\\n          <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n          <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n          <span class=\\\"nx\\\">MultipartUpload</span><span class=\\\"o\\\">:</span> <span class=\\\"p\\\">{</span>\\n            <span class=\\\"nx\\\">Parts</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">parts</span><span class=\\\"p\\\">,</span>\\n          <span class=\\\"p\\\">},</span>\\n          <span class=\\\"nx\\\">UploadId</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">uploadId</span><span class=\\\"p\\\">,</span>\\n        <span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n        <span class=\\\"c1\\\">// finally it&#39;s ended...</span>\\n      <span class=\\\"p\\\">});</span>\\n    <span class=\\\"p\\\">}</span>\\n  <span class=\\\"p\\\">}</span>\\n\\n  <span class=\\\"nx\\\">req</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">on</span><span class=\\\"p\\\">(</span><span class=\\\"s1\\\">&#39;data&#39;</span><span class=\\\"p\\\">,</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">chunk</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"c1\\\">// save this off, as it might have changed before</span>\\n    <span class=\\\"c1\\\">// the response from the upload</span>\\n    <span class=\\\"kr\\\">const</span> <span class=\\\"nx\\\">part</span> <span class=\\\"o\\\">=</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"nx\\\">PartNumber</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">partNumber</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">ETag</span><span class=\\\"o\\\">:</span> <span class=\\\"kc\\\">null</span><span class=\\\"p\\\">,</span> <span class=\\\"c1\\\">// not yet known</span>\\n    <span class=\\\"p\\\">};</span>\\n    <span class=\\\"c1\\\">// we must append now, as there&#39;s no guarantee</span>\\n    <span class=\\\"c1\\\">// the uploadPart responses will arrive in order.</span>\\n    <span class=\\\"c1\\\">// we&#39;ll keep a reference to &#39;part&#39; to fill in the</span>\\n    <span class=\\\"c1\\\">// ETag later.</span>\\n    <span class=\\\"nx\\\">parts</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">append</span><span class=\\\"p\\\">(</span><span class=\\\"nx\\\">part</span><span class=\\\"p\\\">);</span>\\n    <span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">uploadPart</span><span class=\\\"p\\\">({</span>\\n      <span class=\\\"nx\\\">Body</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">chunk</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">PartNumber</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">fixedPartNum</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">UploadId</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">uploadId</span><span class=\\\"p\\\">,</span>\\n    <span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"k\\\">if</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">{</span>\\n        <span class=\\\"c1\\\">// todo, handle errors by</span>\\n        <span class=\\\"c1\\\">// calling abortMultipartUpload</span>\\n      <span class=\\\"p\\\">}</span>\\n      <span class=\\\"c1\\\">// &#39;part&#39; is already in the array</span>\\n      <span class=\\\"c1\\\">// but we have a reference to it, so we can</span>\\n      <span class=\\\"c1\\\">// update with the ETag now that we know it.</span>\\n      <span class=\\\"nx\\\">part</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">ETag</span> <span class=\\\"o\\\">=</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">ETag</span><span class=\\\"p\\\">;</span>\\n      <span class=\\\"nx\\\">maybeEndUpload</span><span class=\\\"p\\\">();</span>\\n    <span class=\\\"p\\\">});</span>\\n  <span class=\\\"p\\\">});</span>\\n  <span class=\\\"nx\\\">req</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">on</span><span class=\\\"p\\\">(</span><span class=\\\"s1\\\">&#39;end&#39;</span><span class=\\\"p\\\">,</span> <span class=\\\"p\\\">()</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"nx\\\">ended</span> <span class=\\\"o\\\">=</span> <span class=\\\"kc\\\">true</span><span class=\\\"p\\\">;</span>\\n    <span class=\\\"nx\\\">maybeEndUpload</span><span class=\\\"p\\\">();</span>\\n  <span class=\\\"p\\\">});</span>\\n<span class=\\\"p\\\">});</span>\\n</pre></div>\\n\";","module.exports = \"<div class=\\\"highlight\\\"><pre><span></span><span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">createMultipartUpload</span><span class=\\\"p\\\">({</span>\\n  <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n  <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n<span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n  <span class=\\\"kr\\\">const</span> <span class=\\\"nx\\\">uploadId</span> <span class=\\\"o\\\">=</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">UploadId</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"kd\\\">let</span> <span class=\\\"nx\\\">partNumber</span> <span class=\\\"o\\\">=</span> <span class=\\\"mi\\\">0</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"kd\\\">let</span> <span class=\\\"nx\\\">parts</span> <span class=\\\"o\\\">=</span> <span class=\\\"p\\\">[];</span>\\n  <span class=\\\"nx\\\">req</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">on</span><span class=\\\"p\\\">(</span><span class=\\\"s1\\\">&#39;data&#39;</span><span class=\\\"p\\\">,</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">chunk</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"c1\\\">// save this off, as it might have changed before</span>\\n    <span class=\\\"c1\\\">// the response from the upload</span>\\n    <span class=\\\"kr\\\">const</span> <span class=\\\"nx\\\">part</span> <span class=\\\"o\\\">=</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"nx\\\">PartNumber</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">partNumber</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">ETag</span><span class=\\\"o\\\">:</span> <span class=\\\"kc\\\">null</span><span class=\\\"p\\\">,</span> <span class=\\\"c1\\\">// not yet known</span>\\n    <span class=\\\"p\\\">};</span>\\n    <span class=\\\"c1\\\">// we must append now, as there&#39;s no guarantee</span>\\n    <span class=\\\"c1\\\">// the uploadPart responses will arrive in order.</span>\\n    <span class=\\\"c1\\\">// we&#39;ll keep a reference to &#39;part&#39; to fill in the</span>\\n    <span class=\\\"c1\\\">// ETag later.</span>\\n    <span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">uploadPart</span><span class=\\\"p\\\">({</span>\\n      <span class=\\\"nx\\\">Body</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">chunk</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">PartNumber</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">fixedPartNum</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">UploadId</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">uploadId</span><span class=\\\"p\\\">,</span>\\n    <span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"k\\\">if</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">{</span>\\n        <span class=\\\"c1\\\">// todo, handle errors by</span>\\n        <span class=\\\"c1\\\">// calling abortMultipartUpload</span>\\n      <span class=\\\"p\\\">}</span>\\n      <span class=\\\"c1\\\">// &#39;part&#39; is already in the array</span>\\n      <span class=\\\"c1\\\">// but we have a reference to it, so we can</span>\\n      <span class=\\\"c1\\\">// update with the ETag now that we know it.</span>\\n      <span class=\\\"nx\\\">part</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">ETag</span> <span class=\\\"o\\\">=</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">ETag</span><span class=\\\"p\\\">;</span>\\n    <span class=\\\"p\\\">});</span>\\n    <span class=\\\"nx\\\">partNumber</span><span class=\\\"o\\\">++</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"p\\\">});</span>\\n  <span class=\\\"nx\\\">req</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">on</span><span class=\\\"p\\\">(</span><span class=\\\"s1\\\">&#39;end&#39;</span><span class=\\\"p\\\">,</span> <span class=\\\"p\\\">()</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">completeMultipartUpload</span><span class=\\\"p\\\">({</span>\\n      <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">MultipartUpload</span><span class=\\\"o\\\">:</span> <span class=\\\"p\\\">{</span>\\n        <span class=\\\"nx\\\">Parts</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">parts</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"p\\\">},</span>\\n      <span class=\\\"nx\\\">UploadId</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">uploadId</span><span class=\\\"p\\\">,</span>\\n    <span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"c1\\\">// finally it&#39;s ended...</span>\\n    <span class=\\\"p\\\">});</span>\\n  <span class=\\\"p\\\">});</span>\\n<span class=\\\"p\\\">});</span>\\n</pre></div>\\n\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"eg-slideshow\"},[_c('slide',[(_vm.isParent)?_c('span',{staticClass:\"small\"},[_vm._v(\"\\n        (~10 months ago, amazon s3 upload from express)\\n      \")]):_vm._e()]),_c('slide',[_c('div',{staticClass:\"vertical-center\",domProps:{\"innerHTML\":_vm._s(_vm.s3Idealized)}})]),_c('slide',[_c('div',{staticClass:\"vertical-center\",domProps:{\"innerHTML\":_vm._s(_vm.s3Callback)}})]),_c('slide',[_c('div',{staticClass:\"vertical-center smaller-03\",domProps:{\"innerHTML\":_vm._s(_vm.s3Multipart)}})]),_c('slide',[_c('div',{staticClass:\"vertical-center smaller-04\",domProps:{\"innerHTML\":_vm._s(_vm.s3SavePartNum)}})]),_c('slide',[_c('div',{staticClass:\"vertical-center smaller-05\",domProps:{\"innerHTML\":_vm._s(_vm.s3OrderedParts)}})]),_c('slide',[_c('div',{staticClass:\"vertical-center smaller-06\",domProps:{\"innerHTML\":_vm._s(_vm.s3EndStream)}})]),_c('slide',[_c('div',{staticClass:\"vertical-center smaller-07\",domProps:{\"innerHTML\":_vm._s(_vm.s3FiveMb)}})]),_c('slide',[_c('div',{staticClass:\"vertical-center smaller-08\",domProps:{\"innerHTML\":_vm._s(_vm.s3AbortOnError)}})]),_c('slide',[_c('h2',[_vm._v(\"Joyful APIs\")]),_c('ul',{staticClass:\"unbulleted center-list left-align\"},[_c('li',[_vm._v(\"Brian Schiller\")]),_c('li',[_vm._v(\"@bgschiller\")]),_c('li',[_vm._v(\"brianschiller.com\")]),_c('li',[_vm._v(\"devetry.com\")])])]),_c('slide',{staticClass:\"title-only\"},[_c('h2',[_vm._v(\"Orient around use, not internals\")])]),_c('slide',[_c('div',{staticClass:\"vertical-center\",domProps:{\"innerHTML\":_vm._s(_vm.pyUrllib2)}})]),_c('slide',[_c('div',{staticClass:\"vertical-center\",domProps:{\"innerHTML\":_vm._s(_vm.pyRequests)}}),_c('div',{staticClass:\"credit\"},[_c('a',{attrs:{\"href\":\"https://gist.github.com/kennethreitz/973705\"}},[_vm._v(\"\\n          https://gist.github.com/kennethreitz/973705\\n        \")])])]),_c('slide',{staticClass:\"title-only\"},[_c('h2',[_vm._v(\"Move complexity downard\")])]),_c('slide',[_vm._v(\"\\n      imperative DOM manipulation vs Virtual DOM. (maybe Sarah Drasner jQuery vs Vue)\\n      (maybe https://bl.ocks.org/mbostock/3808234)\\n    \")]),_c('slide',[_c('div',{staticClass:\"blockquote\"},[_vm._v(\"\\n        Something inevitably has to put shit in the DOM. -David Cushman\\n      \")])]),_c('slide',{staticClass:\"title-only\"},[_c('h2',[_vm._v(\"Suffer for your API\")])]),_c('slide',[_vm._v(\"\\n      https://github.com/jwt-dotnet/jwt#parsing-decoding-and-verifying-token\\n    \")]),_c('slide',{attrs:{\"steps\":2}},[_c('div',{staticClass:\"by-halves\"},[_c('div',{staticClass:\"vertical-center\",domProps:{\"innerHTML\":_vm._s(_vm.s3IdealizedInner)}}),_c('div',{directives:[{name:\"visible\",rawName:\"v-visible\",value:(_vm.step >= 2),expression:\"step >= 2\"}],staticClass:\"vertical-center smaller-08\",domProps:{\"innerHTML\":_vm._s(_vm.s3AbortOnError)}})])]),_c('slide',{attrs:{\"steps\":4}},[_c('h2',[_vm._v(\"In Amazon's defense...\")]),_c('ul',{staticClass:\"center-list larger\"},[_c('li',{directives:[{name:\"visible\",rawName:\"v-visible\",value:(_vm.step>=2),expression:\"step>=2\"}]},[_vm._v(\"fault-tolerant\")]),_c('li',{directives:[{name:\"visible\",rawName:\"v-visible\",value:(_vm.step>=3),expression:\"step>=3\"}]},[_vm._v(\"parallelizable\")]),_c('li',{directives:[{name:\"visible\",rawName:\"v-visible\",value:(_vm.step>=4),expression:\"step>=4\"}]},[_vm._v(\"direct map to HTTP\")])])]),_c('slide',{staticClass:\"title-only\"},[_c('h2',[_vm._v(\"On the other hand...\")])]),_c('slide',[_c('div',{staticClass:\"img-contain\",staticStyle:{\"background-image\":\"url(/joyful-apis/images/i_dont_care.jpg)\"}})]),_c('slide',{attrs:{\"steps\":10}},[(_vm.step >= 9)?_c('h2',{staticClass:\"floating-header\"},[_vm._v(\"\\n        Joyful API Design\\n      \")]):_vm._e(),_c('div',{staticClass:\"by-halves\"},[_c('ul',{staticClass:\"left-align unbulleted\"},[_c('li',{directives:[{name:\"visible\",rawName:\"v-visible\",value:(_vm.step >= 2),expression:\"step >= 2\"}],class:{ stricken: _vm.step >= 6 }},[_vm._v(\"Organized according to how it works\")]),_c('li',{directives:[{name:\"visible\",rawName:\"v-visible\",value:(_vm.step >= 3),expression:\"step >= 3\"}],class:{ stricken: _vm.step >= 7 }},[_vm._v(\"Left all the complexity\")]),_c('li',{directives:[{name:\"visible\",rawName:\"v-visible\",value:(_vm.step >= 4),expression:\"step >= 4\"}],class:{ stricken: _vm.step >= 8 }},[_vm._v(\"Roll-your-own error handling\")])]),(_vm.step <= 4)?_c('div',{staticClass:\"vertical-center smaller-08\",domProps:{\"innerHTML\":_vm._s(_vm.s3AbortOnError)}}):_vm._e(),(_vm.step>=5)?_c('ul',{staticClass:\"left-align unbulleted\"},[_c('li',{directives:[{name:\"visible\",rawName:\"v-visible\",value:(_vm.step >= 6),expression:\"step >= 6\"}]},[_vm._v(\"Orient around use, not internals\")]),_c('li',{directives:[{name:\"visible\",rawName:\"v-visible\",value:(_vm.step >= 7),expression:\"step >= 7\"}]},[_vm._v(\"Move complexity downward\")]),_c('li',{directives:[{name:\"visible\",rawName:\"v-visible\",value:(_vm.step >= 8),expression:\"step >= 8\"}]},[_vm._v(\"Suffer for your API\")])]):_vm._e()]),(_vm.step >= 10)?_c('h2',{staticClass:\"floating-header bottom-header\"},[_vm._v(\"\\n        Empathy\\n      \")]):_vm._e()])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <div class=\"eg-slideshow\">\n      <slide>\n        <span class=\"small\" v-if=\"isParent\">\n          (~10 months ago, amazon s3 upload from express)\n        </span>\n      </slide>\n      <slide>\n        <div class=\"vertical-center\" v-html=\"s3Idealized\" />\n      </slide>\n      <slide>\n        <div class=\"vertical-center\" v-html=\"s3Callback\" />\n      </slide>\n      <slide>\n        <div class=\"vertical-center smaller-03\" v-html=\"s3Multipart\" />\n      </slide>\n      <slide>\n        <div class=\"vertical-center smaller-04\" v-html=\"s3SavePartNum\" />\n      </slide>\n      <slide>\n        <div class=\"vertical-center smaller-05\" v-html=\"s3OrderedParts\" />\n      </slide>\n      <slide>\n        <div class=\"vertical-center smaller-06\" v-html=\"s3EndStream\" />\n      </slide>\n      <slide>\n        <div class=\"vertical-center smaller-07\" v-html=\"s3FiveMb\" />\n      </slide>\n      <slide>\n        <div class=\"vertical-center smaller-08\" v-html=\"s3AbortOnError\" />\n      </slide>\n      <slide>\n        <h2>Joyful APIs</h2>\n        <ul class=\"unbulleted center-list left-align\">\n          <li>Brian Schiller</li>\n          <li>@bgschiller</li>\n          <li>brianschiller.com</li>\n          <li>devetry.com</li>\n        </ul>\n      </slide>\n      <slide class=\"title-only\">\n        <h2>Orient around use, not internals</h2>\n      </slide>\n      <slide>\n        <div class=\"vertical-center\" v-html=\"pyUrllib2\" />\n      </slide>\n      <slide>\n        <div class=\"vertical-center\" v-html=\"pyRequests\" />\n        <div class=\"credit\">\n          <a href=\"https://gist.github.com/kennethreitz/973705\">\n            https://gist.github.com/kennethreitz/973705\n          </a>\n        </div>\n      </slide>\n      <slide class=\"title-only\">\n        <h2>Move complexity downard</h2>\n      </slide>\n      <slide>\n        imperative DOM manipulation vs Virtual DOM. (maybe Sarah Drasner jQuery vs Vue)\n        (maybe https://bl.ocks.org/mbostock/3808234)\n      </slide>\n      <slide>\n        <div class=\"blockquote\">\n          Something inevitably has to put shit in the DOM. -David Cushman\n        </div>\n      </slide>\n      <slide class=\"title-only\">\n        <h2>Suffer for your API</h2>\n      </slide>\n      <slide>\n        https://github.com/jwt-dotnet/jwt#parsing-decoding-and-verifying-token\n      </slide>\n            <slide :steps=\"2\">\n        <div class=\"by-halves\">\n          <div class=\"vertical-center\" v-html=\"s3IdealizedInner\" />\n          <div v-visible=\"step >= 2\" class=\"vertical-center smaller-08\" v-html=\"s3AbortOnError\" />\n        </div>\n      </slide>\n      <slide :steps=\"4\">\n        <h2>In Amazon's defense...</h2>\n        <ul class=\"center-list larger\">\n          <li v-visible=\"step>=2\">fault-tolerant</li>\n          <li v-visible=\"step>=3\">parallelizable</li>\n          <li v-visible=\"step>=4\">direct map to HTTP</li>\n        </ul>\n      </slide>\n      <slide class=\"title-only\">\n        <h2>On the other hand...</h2>\n      </slide>\n      <slide>\n        <div class=\"img-contain\" style=\"background-image: url(/joyful-apis/images/i_dont_care.jpg)\" />\n      </slide>\n      <slide :steps=\"10\">\n        <h2 v-if=\"step >= 9\" class=\"floating-header\">\n          Joyful API Design\n        </h2>\n        <div class=\"by-halves\">\n          <ul class=\"left-align unbulleted\">\n            <li v-visible=\"step >= 2\" :class=\"{ stricken: step >= 6 }\">Organized according to how it works</li>\n            <li v-visible=\"step >= 3\"  :class=\"{ stricken: step >= 7 }\">Left all the complexity</li>\n            <li v-visible=\"step >= 4\"  :class=\"{ stricken: step >= 8 }\">Roll-your-own error handling</li>\n          </ul>\n          <div\n            class=\"vertical-center smaller-08\"\n            v-html=\"s3AbortOnError\"\n            v-if=\"step <= 4\"\n          />\n          <ul v-if=\"step>=5\" class=\"left-align unbulleted\">\n            <li v-visible=\"step >= 6\">Orient around use, not internals</li>\n            <li v-visible=\"step >= 7\">Move complexity downward</li>\n            <li v-visible=\"step >= 8\">Suffer for your API</li>\n          </ul>\n        </div>\n        <h2 v-if=\"step >= 10\" class=\"floating-header bottom-header\">\n          Empathy\n        </h2>\n      </slide>\n    </div>\n  </div>\n</template>\n\n<script>\nimport eagle from 'eagle.js';\nimport s3Idealized from './code-snippets/01-s3-idealized.html';\nimport s3Callback from './code-snippets/02-s3-callback.html';\nimport s3Multipart from './code-snippets/03-s3-multipart.html';\nimport s3SavePartNum from './code-snippets/04-s3-save-part-number.html';\nimport s3OrderedParts from './code-snippets/05-s3-ordered-parts.html';\nimport s3EndStream from './code-snippets/06-s3-end-stream-not-end-upload.html';\nimport s3FiveMb from './code-snippets/07-s3-five-mb-chunks.html';\nimport s3AbortOnError from './code-snippets/08-s3-abort-on-error.html';\nimport s3IdealizedInner from './code-snippets/09-s3-idealized-inner.html';\nimport pyUrllib2 from './code-snippets/10_urllib2.html';\nimport pyRequests from './code-snippets/11_requests.html';\n\nexport default {\n  name: 'app',\n  mixins: [eagle.slideshow],\n  data() {\n    return {\n      s3Idealized,\n      s3Callback,\n      s3Multipart,\n      s3SavePartNum,\n      s3OrderedParts,\n      s3EndStream,\n      s3FiveMb,\n      s3AbortOnError,\n      s3IdealizedInner,\n      pyRequests,\n      pyUrllib2,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import './code-snippets/highlight-styles.css';\n\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n.eg-slideshow {\n  background-image: url(/joyful-apis/images/linen_texture_four_times.jpg);\n}\n.eg-slide {\n  background-color: none;\n}\n\n.smaller-03 {\n  font-size: 0.8rem;\n}\n.smaller-04 {\n  font-size: 0.8rem;\n}\n.smaller-05 {\n  font-size: 0.7rem;\n}\n.smaller-06 {\n  font-size: 0.6rem;\n}\n.smaller-07 {\n  font-size: 0.5rem;\n}\n.smaller-08 {\n  font-size: 0.38rem;\n}\n.floating-header {\n  position: absolute;\n  width: 100%;\n  &.bottom-header {\n    top: 60%;\n  }\n}\n.credit {\n  position: absolute;\n  width: fit-content;\n  right: 20px;\n  bottom: 20px;\n}\n.by-halves {\n  display: flex;\n  height: 100vh;\n  > * {\n    width: 45vw;\n    margin: 0 auto;\n    align-self: center;\n  }\n  ul.left-align.unbulleted {\n    margin-left: 0;\n  }\n}\n\n\n.highlight pre {\n  background-color: #f0f3f3;\n  text-align: left;\n  width: fit-content;\n  margin: 0 auto;\n  padding: 20px;\n}\n\nbody {\n  margin: 0;\n}\n.vertical-center {\n  display:flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  align-self: center;\n  height: 100vh;\n}\np {\n  max-width: 90vw;\n  margin-left: auto;\n  margin-right: auto;\n}\n.unbulleted {\n  list-style: none;\n  max-width: 90vw;\n  li {\n    margin-bottom: 1rem;\n  }\n}\n.center-list {\n  width: fit-content;\n  margin-left: auto;\n  margin-right:auto;\n  text-align: left;\n}\n.img-contain {\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size:contain;\n  width: 100vw;\n  height: 100vh;\n  max-width: 100vw !important;\n}\n\n.stricken {\n  text-decoration: line-through;\n}\n\n.larger {\n  font-size: 3rem;\n}\n.left-align {\n  text-align: left;\n}\n.title-only {\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n.white-back {\n  background-color: white;\n}\n\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=092d0ebb&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"App.vue\"\nexport default component.exports","import Vue from 'vue';\nimport Eagle, { Options } from 'eagle.js';\nimport 'eagle.js/dist/eagle.css';\nimport VueVisible from 'vue-visible'\nimport hljs from 'highlight.js/lib/highlight';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport App from './App.vue';\n\nhljs.registerLanguage('javascript', javascript);\nOptions.hljs = hljs;\n\nVue.config.productionTip = false;\n\nEagle.slideshow.computed.isChild = function () {\n  return !!this.parentWindow;\n};\nEagle.slideshow.computed.isParent = function () {\n  return !!this.childWindow;\n};\n\n\nVue.use(Eagle);\nVue.use(VueVisible);\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app');\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","module.exports = \"<div class=\\\"highlight\\\"><pre><span></span><span class=\\\"kn\\\">import</span> <span class=\\\"nn\\\">urllib2</span>\\n\\n<span class=\\\"n\\\">gh_url</span> <span class=\\\"o\\\">=</span> <span class=\\\"s1\\\">&#39;https://api.github.com&#39;</span>\\n\\n<span class=\\\"n\\\">req</span> <span class=\\\"o\\\">=</span> <span class=\\\"n\\\">urllib2</span><span class=\\\"o\\\">.</span><span class=\\\"n\\\">Request</span><span class=\\\"p\\\">(</span><span class=\\\"n\\\">gh_url</span><span class=\\\"p\\\">)</span>\\n\\n<span class=\\\"n\\\">password_manager</span> <span class=\\\"o\\\">=</span> <span class=\\\"n\\\">urllib2</span><span class=\\\"o\\\">.</span><span class=\\\"n\\\">HTTPPasswordMgrWithDefaultRealm</span><span class=\\\"p\\\">()</span>\\n<span class=\\\"n\\\">password_manager</span><span class=\\\"o\\\">.</span><span class=\\\"n\\\">add_password</span><span class=\\\"p\\\">(</span><span class=\\\"bp\\\">None</span><span class=\\\"p\\\">,</span> <span class=\\\"n\\\">gh_url</span><span class=\\\"p\\\">,</span> <span class=\\\"s1\\\">&#39;user&#39;</span><span class=\\\"p\\\">,</span> <span class=\\\"s1\\\">&#39;pass&#39;</span><span class=\\\"p\\\">)</span>\\n\\n<span class=\\\"n\\\">auth_manager</span> <span class=\\\"o\\\">=</span> <span class=\\\"n\\\">urllib2</span><span class=\\\"o\\\">.</span><span class=\\\"n\\\">HTTPBasicAuthHandler</span><span class=\\\"p\\\">(</span><span class=\\\"n\\\">password_manager</span><span class=\\\"p\\\">)</span>\\n<span class=\\\"n\\\">opener</span> <span class=\\\"o\\\">=</span> <span class=\\\"n\\\">urllib2</span><span class=\\\"o\\\">.</span><span class=\\\"n\\\">build_opener</span><span class=\\\"p\\\">(</span><span class=\\\"n\\\">auth_manager</span><span class=\\\"p\\\">)</span>\\n\\n<span class=\\\"n\\\">urllib2</span><span class=\\\"o\\\">.</span><span class=\\\"n\\\">install_opener</span><span class=\\\"p\\\">(</span><span class=\\\"n\\\">opener</span><span class=\\\"p\\\">)</span>\\n\\n<span class=\\\"n\\\">handler</span> <span class=\\\"o\\\">=</span> <span class=\\\"n\\\">urllib2</span><span class=\\\"o\\\">.</span><span class=\\\"n\\\">urlopen</span><span class=\\\"p\\\">(</span><span class=\\\"n\\\">req</span><span class=\\\"p\\\">)</span>\\n\\n<span class=\\\"k\\\">print</span> <span class=\\\"n\\\">handler</span><span class=\\\"o\\\">.</span><span class=\\\"n\\\">getcode</span><span class=\\\"p\\\">()</span>\\n<span class=\\\"k\\\">print</span> <span class=\\\"n\\\">handler</span><span class=\\\"o\\\">.</span><span class=\\\"n\\\">headers</span><span class=\\\"o\\\">.</span><span class=\\\"n\\\">getheader</span><span class=\\\"p\\\">(</span><span class=\\\"s1\\\">&#39;content-type&#39;</span><span class=\\\"p\\\">)</span>\\n</pre></div>\\n\";","module.exports = \"<div class=\\\"highlight\\\"><pre><span></span><span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">createMultipartUpload</span><span class=\\\"p\\\">({</span>\\n  <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n  <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n<span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n  <span class=\\\"kr\\\">const</span> <span class=\\\"nx\\\">uploadId</span> <span class=\\\"o\\\">=</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">UploadId</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"kd\\\">let</span> <span class=\\\"nx\\\">partNumber</span> <span class=\\\"o\\\">=</span> <span class=\\\"mi\\\">0</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"kd\\\">let</span> <span class=\\\"nx\\\">parts</span> <span class=\\\"o\\\">=</span> <span class=\\\"p\\\">[];</span>\\n  <span class=\\\"nx\\\">req</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">on</span><span class=\\\"p\\\">(</span><span class=\\\"s1\\\">&#39;data&#39;</span><span class=\\\"p\\\">,</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">chunk</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"kr\\\">const</span> <span class=\\\"nx\\\">fixedPartNum</span> <span class=\\\"o\\\">=</span> <span class=\\\"nx\\\">partNumber</span><span class=\\\"p\\\">;</span>\\n    <span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">uploadPart</span><span class=\\\"p\\\">({</span>\\n      <span class=\\\"nx\\\">Body</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">chunk</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">PartNumber</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">fixedPartNum</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">UploadId</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">uploadId</span><span class=\\\"p\\\">,</span>\\n    <span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"k\\\">if</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">{</span>\\n        <span class=\\\"c1\\\">// todo, handle errors by</span>\\n        <span class=\\\"c1\\\">// calling abortMultipartUpload</span>\\n      <span class=\\\"p\\\">}</span>\\n      <span class=\\\"nx\\\">parts</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">append</span><span class=\\\"p\\\">({</span>\\n        <span class=\\\"nx\\\">PartNumber</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">fixedPartNum</span><span class=\\\"p\\\">,</span>\\n        <span class=\\\"nx\\\">ETag</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">ETag</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"p\\\">});</span>\\n    <span class=\\\"p\\\">});</span>\\n    <span class=\\\"nx\\\">partNumber</span><span class=\\\"o\\\">++</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"p\\\">});</span>\\n  <span class=\\\"nx\\\">req</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">on</span><span class=\\\"p\\\">(</span><span class=\\\"s1\\\">&#39;end&#39;</span><span class=\\\"p\\\">,</span> <span class=\\\"p\\\">()</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">completeMultipartUpload</span><span class=\\\"p\\\">({</span>\\n      <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">MultipartUpload</span><span class=\\\"o\\\">:</span> <span class=\\\"p\\\">{</span>\\n        <span class=\\\"nx\\\">Parts</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">parts</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"p\\\">},</span>\\n      <span class=\\\"nx\\\">UploadId</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">uploadId</span><span class=\\\"p\\\">,</span>\\n    <span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"c1\\\">// finally it&#39;s ended...</span>\\n    <span class=\\\"p\\\">});</span>\\n  <span class=\\\"p\\\">});</span>\\n<span class=\\\"p\\\">});</span>\\n</pre></div>\\n\";","module.exports = \"<div class=\\\"highlight\\\"><pre><span></span><span class=\\\"kn\\\">import</span> <span class=\\\"nn\\\">requests</span>\\n\\n<span class=\\\"n\\\">r</span> <span class=\\\"o\\\">=</span> <span class=\\\"n\\\">requests</span><span class=\\\"o\\\">.</span><span class=\\\"n\\\">get</span><span class=\\\"p\\\">(</span><span class=\\\"s1\\\">&#39;https://api.github.com&#39;</span><span class=\\\"p\\\">,</span> <span class=\\\"n\\\">auth</span><span class=\\\"o\\\">=</span><span class=\\\"p\\\">(</span><span class=\\\"s1\\\">&#39;user&#39;</span><span class=\\\"p\\\">,</span> <span class=\\\"s1\\\">&#39;pass&#39;</span><span class=\\\"p\\\">))</span>\\n\\n<span class=\\\"k\\\">print</span> <span class=\\\"n\\\">r</span><span class=\\\"o\\\">.</span><span class=\\\"n\\\">status_code</span>\\n<span class=\\\"k\\\">print</span> <span class=\\\"n\\\">r</span><span class=\\\"o\\\">.</span><span class=\\\"n\\\">headers</span><span class=\\\"p\\\">[</span><span class=\\\"s1\\\">&#39;content-type&#39;</span><span class=\\\"p\\\">]</span>\\n</pre></div>\\n\";","module.exports = \"<div class=\\\"highlight\\\"><pre><span></span><span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">createMultipartUpload</span><span class=\\\"p\\\">({</span>\\n  <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n  <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n<span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n  <span class=\\\"kr\\\">const</span> <span class=\\\"nx\\\">uploadId</span> <span class=\\\"o\\\">=</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">UploadId</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"kd\\\">let</span> <span class=\\\"nx\\\">partNumber</span> <span class=\\\"o\\\">=</span> <span class=\\\"mi\\\">0</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"kd\\\">let</span> <span class=\\\"nx\\\">parts</span> <span class=\\\"o\\\">=</span> <span class=\\\"p\\\">[];</span>\\n  <span class=\\\"nx\\\">req</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">on</span><span class=\\\"p\\\">(</span><span class=\\\"s1\\\">&#39;data&#39;</span><span class=\\\"p\\\">,</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">chunk</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">uploadPart</span><span class=\\\"p\\\">({</span>\\n      <span class=\\\"nx\\\">Body</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">chunk</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">PartNumber</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">partNumber</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">UploadId</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">uploadId</span><span class=\\\"p\\\">,</span>\\n    <span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"k\\\">if</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">{</span>\\n        <span class=\\\"c1\\\">// todo, handle errors by</span>\\n        <span class=\\\"c1\\\">// calling abortMultipartUpload</span>\\n      <span class=\\\"p\\\">}</span>\\n      <span class=\\\"nx\\\">parts</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">append</span><span class=\\\"p\\\">({</span>\\n        <span class=\\\"nx\\\">PartNumber</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">partNumber</span><span class=\\\"p\\\">,</span>\\n        <span class=\\\"nx\\\">ETag</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">ETag</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"p\\\">});</span>\\n    <span class=\\\"p\\\">});</span>\\n    <span class=\\\"nx\\\">partNumber</span><span class=\\\"o\\\">++</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"p\\\">});</span>\\n  <span class=\\\"nx\\\">req</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">on</span><span class=\\\"p\\\">(</span><span class=\\\"s1\\\">&#39;end&#39;</span><span class=\\\"p\\\">,</span> <span class=\\\"p\\\">()</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">completeMultipartUpload</span><span class=\\\"p\\\">({</span>\\n      <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">MultipartUpload</span><span class=\\\"o\\\">:</span> <span class=\\\"p\\\">{</span>\\n        <span class=\\\"nx\\\">Parts</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">parts</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"p\\\">},</span>\\n      <span class=\\\"nx\\\">UploadId</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">uploadId</span><span class=\\\"p\\\">,</span>\\n    <span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"c1\\\">// finally it&#39;s ended...</span>\\n    <span class=\\\"p\\\">});</span>\\n  <span class=\\\"p\\\">});</span>\\n<span class=\\\"p\\\">});</span>\\n</pre></div>\\n\";","module.exports = \"<div class=\\\"highlight\\\"><pre><span></span><span class=\\\"nx\\\">app</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">post</span><span class=\\\"p\\\">(</span><span class=\\\"s1\\\">&#39;/upload&#39;</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">async</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">req</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">res</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n  <span class=\\\"kr\\\">const</span> <span class=\\\"nx\\\">filename</span> <span class=\\\"o\\\">=</span> <span class=\\\"nx\\\">uuid</span><span class=\\\"p\\\">()</span> <span class=\\\"o\\\">+</span> <span class=\\\"s1\\\">&#39;.mp4&#39;</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"nx\\\">await</span> <span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">putObject</span><span class=\\\"p\\\">({</span>\\n    <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n    <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n    <span class=\\\"c1\\\">// forward the body of the request</span>\\n    <span class=\\\"c1\\\">// straight to s3</span>\\n    <span class=\\\"nx\\\">Body</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">req</span><span class=\\\"p\\\">,</span>\\n  <span class=\\\"p\\\">});</span>\\n  <span class=\\\"nx\\\">res</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">json</span><span class=\\\"p\\\">({</span> <span class=\\\"nx\\\">filename</span> <span class=\\\"p\\\">});</span>\\n<span class=\\\"p\\\">});</span>\\n</pre></div>\\n\";","module.exports = \"<div class=\\\"highlight\\\"><pre><span></span><span class=\\\"nx\\\">app</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">post</span><span class=\\\"p\\\">(</span><span class=\\\"s1\\\">&#39;/upload&#39;</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">async</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">req</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">res</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n  <span class=\\\"kr\\\">const</span> <span class=\\\"nx\\\">filename</span> <span class=\\\"o\\\">=</span> <span class=\\\"nx\\\">uuid</span><span class=\\\"p\\\">()</span> <span class=\\\"o\\\">+</span> <span class=\\\"s1\\\">&#39;.mp4&#39;</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">putObject</span><span class=\\\"p\\\">({</span>\\n    <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n    <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n    <span class=\\\"c1\\\">// forward the body of the request straight to s3</span>\\n    <span class=\\\"nx\\\">Body</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">req</span><span class=\\\"p\\\">,</span>\\n  <span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"k\\\">if</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"nx\\\">res</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">sendStatus</span><span class=\\\"p\\\">(</span><span class=\\\"mi\\\">500</span><span class=\\\"p\\\">);</span>\\n    <span class=\\\"p\\\">}</span> <span class=\\\"k\\\">else</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"nx\\\">res</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">json</span><span class=\\\"p\\\">({</span> <span class=\\\"nx\\\">filename</span> <span class=\\\"p\\\">});</span>\\n    <span class=\\\"p\\\">}</span>\\n  <span class=\\\"p\\\">});</span>\\n<span class=\\\"p\\\">});</span>\\n</pre></div>\\n\";","module.exports = \"<div class=\\\"highlight\\\"><pre><span></span><span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">createMultipartUpload</span><span class=\\\"p\\\">({</span>\\n  <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n  <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n<span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n  <span class=\\\"kr\\\">const</span> <span class=\\\"nx\\\">uploadId</span> <span class=\\\"o\\\">=</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">UploadId</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"kd\\\">let</span> <span class=\\\"nx\\\">partNumber</span> <span class=\\\"o\\\">=</span> <span class=\\\"mi\\\">0</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"kd\\\">let</span> <span class=\\\"nx\\\">ended</span> <span class=\\\"o\\\">=</span> <span class=\\\"kc\\\">false</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"kd\\\">let</span> <span class=\\\"nx\\\">cancelled</span> <span class=\\\"o\\\">=</span> <span class=\\\"kc\\\">false</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"kr\\\">const</span> <span class=\\\"nx\\\">parts</span> <span class=\\\"o\\\">=</span> <span class=\\\"p\\\">[];</span>\\n  <span class=\\\"kd\\\">let</span> <span class=\\\"nx\\\">chunkSoFar</span> <span class=\\\"o\\\">=</span> <span class=\\\"s1\\\">&#39;&#39;</span><span class=\\\"p\\\">;</span>\\n  <span class=\\\"kd\\\">function</span> <span class=\\\"nx\\\">maybeCompleteUpload</span><span class=\\\"p\\\">()</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"k\\\">if</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">ended</span> <span class=\\\"o\\\">&amp;&amp;</span> <span class=\\\"nx\\\">parts</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">all</span><span class=\\\"p\\\">(</span><span class=\\\"nx\\\">p</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"nx\\\">p</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">ETag</span><span class=\\\"p\\\">))</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">completeMultipartUpload</span><span class=\\\"p\\\">({</span>\\n          <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n          <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n          <span class=\\\"nx\\\">MultipartUpload</span><span class=\\\"o\\\">:</span> <span class=\\\"p\\\">{</span>\\n            <span class=\\\"nx\\\">Parts</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">parts</span><span class=\\\"p\\\">,</span>\\n          <span class=\\\"p\\\">},</span>\\n          <span class=\\\"nx\\\">UploadId</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">uploadId</span><span class=\\\"p\\\">,</span>\\n        <span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n          <span class=\\\"k\\\">if</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">{</span>\\n            <span class=\\\"nx\\\">cancelUpload</span><span class=\\\"p\\\">();</span>\\n          <span class=\\\"p\\\">}</span>\\n      <span class=\\\"p\\\">});</span>\\n    <span class=\\\"p\\\">}</span>\\n  <span class=\\\"p\\\">}</span>\\n\\n  <span class=\\\"kd\\\">function</span> <span class=\\\"nx\\\">cancelUpload</span><span class=\\\"p\\\">()</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"nx\\\">cancelled</span> <span class=\\\"o\\\">=</span> <span class=\\\"kc\\\">true</span><span class=\\\"p\\\">;</span>\\n    <span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">abortMultipartUpload</span><span class=\\\"p\\\">({</span>\\n      <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">UploadId</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">uploadId</span><span class=\\\"p\\\">,</span>\\n    <span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"k\\\">if</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">{</span>\\n        <span class=\\\"nx\\\">console</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">log</span><span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">err</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">stack</span><span class=\\\"p\\\">);</span>\\n      <span class=\\\"p\\\">}</span> <span class=\\\"k\\\">else</span> <span class=\\\"p\\\">{</span>\\n        <span class=\\\"nx\\\">console</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">log</span><span class=\\\"p\\\">(</span><span class=\\\"nx\\\">data</span><span class=\\\"p\\\">);</span>\\n      <span class=\\\"p\\\">}</span>\\n    <span class=\\\"p\\\">});</span>\\n  <span class=\\\"p\\\">}</span>\\n\\n  <span class=\\\"kd\\\">function</span> <span class=\\\"nx\\\">appendPart</span><span class=\\\"p\\\">(</span><span class=\\\"nx\\\">payload</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">partNumber</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"c1\\\">// save this off, as it might have changed before</span>\\n    <span class=\\\"c1\\\">// the response from the upload</span>\\n    <span class=\\\"kr\\\">const</span> <span class=\\\"nx\\\">part</span> <span class=\\\"o\\\">=</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"nx\\\">PartNumber</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">partNumber</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">ETag</span><span class=\\\"o\\\">:</span> <span class=\\\"kc\\\">null</span><span class=\\\"p\\\">,</span> <span class=\\\"c1\\\">// not yet known</span>\\n    <span class=\\\"p\\\">};</span>\\n    <span class=\\\"c1\\\">// we must append now, as there&#39;s no guarantee</span>\\n    <span class=\\\"c1\\\">// the uploadPart responses will arrive in order.</span>\\n    <span class=\\\"c1\\\">// we&#39;ll keep a reference to &#39;part&#39; to fill in the</span>\\n    <span class=\\\"c1\\\">// ETag later.</span>\\n    <span class=\\\"nx\\\">parts</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">append</span><span class=\\\"p\\\">(</span><span class=\\\"nx\\\">part</span><span class=\\\"p\\\">);</span>\\n    <span class=\\\"nx\\\">s3</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">uploadPart</span><span class=\\\"p\\\">({</span>\\n      <span class=\\\"nx\\\">Body</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">payload</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">Bucket</span><span class=\\\"o\\\">:</span> <span class=\\\"s1\\\">&#39;better-than-youtube&#39;</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">Key</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">filename</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">PartNumber</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">part</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">partNumber</span><span class=\\\"p\\\">,</span>\\n      <span class=\\\"nx\\\">UploadId</span><span class=\\\"o\\\">:</span> <span class=\\\"nx\\\">uploadId</span><span class=\\\"p\\\">,</span>\\n    <span class=\\\"p\\\">},</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"k\\\">if</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">err</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">{</span>\\n        <span class=\\\"nx\\\">cancelUpload</span><span class=\\\"p\\\">();</span>\\n      <span class=\\\"p\\\">}</span>\\n      <span class=\\\"c1\\\">// &#39;part&#39; is already in the array</span>\\n      <span class=\\\"c1\\\">// but we have a reference to it, so we can</span>\\n      <span class=\\\"c1\\\">// update with the ETag now that we know it.</span>\\n      <span class=\\\"nx\\\">part</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">ETag</span> <span class=\\\"o\\\">=</span> <span class=\\\"nx\\\">data</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">ETag</span><span class=\\\"p\\\">;</span>\\n      <span class=\\\"nx\\\">maybeCompleteUpload</span><span class=\\\"p\\\">();</span>\\n    <span class=\\\"p\\\">});</span>\\n  <span class=\\\"p\\\">}</span>\\n\\n  <span class=\\\"nx\\\">req</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">on</span><span class=\\\"p\\\">(</span><span class=\\\"s1\\\">&#39;data&#39;</span><span class=\\\"p\\\">,</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">chunk</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"nx\\\">chunkSoFar</span> <span class=\\\"o\\\">+=</span> <span class=\\\"nx\\\">chunk</span><span class=\\\"p\\\">;</span>\\n    <span class=\\\"k\\\">if</span> <span class=\\\"p\\\">(</span>\\n        <span class=\\\"nx\\\">chunkSoFar</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">length</span> <span class=\\\"o\\\">&gt;</span> <span class=\\\"nx\\\">FIVE_MB_IN_BYTES</span> <span class=\\\"o\\\">&amp;&amp;</span>\\n        <span class=\\\"o\\\">!</span><span class=\\\"nx\\\">cancelled</span>\\n    <span class=\\\"p\\\">)</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"nx\\\">appendPart</span><span class=\\\"p\\\">(</span><span class=\\\"nx\\\">chunkSoFar</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">partNumber</span><span class=\\\"p\\\">);</span>\\n      <span class=\\\"nx\\\">chunkSoFar</span> <span class=\\\"o\\\">=</span> <span class=\\\"s1\\\">&#39;&#39;</span><span class=\\\"p\\\">;</span>\\n      <span class=\\\"nx\\\">partNumber</span><span class=\\\"o\\\">++</span><span class=\\\"p\\\">;</span>\\n    <span class=\\\"p\\\">}</span>\\n  <span class=\\\"p\\\">});</span>\\n  <span class=\\\"nx\\\">req</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">on</span><span class=\\\"p\\\">(</span><span class=\\\"s1\\\">&#39;end&#39;</span><span class=\\\"p\\\">,</span> <span class=\\\"p\\\">()</span> <span class=\\\"p\\\">=&gt;</span> <span class=\\\"p\\\">{</span>\\n    <span class=\\\"nx\\\">ended</span> <span class=\\\"o\\\">=</span> <span class=\\\"kc\\\">true</span><span class=\\\"p\\\">;</span>\\n    <span class=\\\"k\\\">if</span> <span class=\\\"p\\\">(</span><span class=\\\"nx\\\">chunkSoFar</span><span class=\\\"p\\\">.</span><span class=\\\"nx\\\">length</span> <span class=\\\"o\\\">&gt;</span> <span class=\\\"mi\\\">0</span><span class=\\\"p\\\">)</span> <span class=\\\"p\\\">{</span>\\n      <span class=\\\"nx\\\">appendPart</span><span class=\\\"p\\\">(</span><span class=\\\"nx\\\">chunkSoFar</span><span class=\\\"p\\\">,</span> <span class=\\\"nx\\\">partNumber</span><span class=\\\"p\\\">);</span>\\n    <span class=\\\"p\\\">}</span>\\n    <span class=\\\"nx\\\">maybeCompleteUpload</span><span class=\\\"p\\\">();</span>\\n  <span class=\\\"p\\\">});</span>\\n<span class=\\\"p\\\">});</span>\\n</pre></div>\\n\";"],"sourceRoot":""}